"""Add plant care advice system with priority and validation

Revision ID: 231ef0d05ec9
Revises: add_lat_lng_001
Create Date: 2025-08-28 21:47:27.904020

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "231ef0d05ec9"
down_revision: Union[str, None] = "add_lat_lng_001"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "plant_care_advice",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("plant_care_id", sa.Integer(), nullable=False),
        sa.Column("botanist_id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=255), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column(
            "priority",
            sa.Enum("NORMAL", "URGENT", "FOLLOW_UP", name="advicepriority"),
            nullable=True,
        ),
        sa.Column(
            "validation_status",
            sa.Enum(
                "PENDING",
                "VALIDATED",
                "REJECTED",
                "NEEDS_REVISION",
                name="validationstatus",
            ),
            nullable=True,
        ),
        sa.Column("validator_id", sa.Integer(), nullable=True),
        sa.Column("validation_comment", sa.Text(), nullable=True),
        sa.Column("validated_at", sa.DateTime(), nullable=True),
        sa.Column("version", sa.Integer(), nullable=True),
        sa.Column("is_current_version", sa.Boolean(), nullable=True),
        sa.Column("previous_version_id", sa.Integer(), nullable=True),
        sa.Column("owner_notified", sa.Boolean(), nullable=True),
        sa.Column("botanist_notified", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["botanist_id"], ["users.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["plant_care_id"], ["plant_cares.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["previous_version_id"], ["plant_care_advice.id"], ondelete="SET NULL"
        ),
        sa.ForeignKeyConstraint(["validator_id"], ["users.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("plant_care_advice")
    # ### end Alembic commands ###
